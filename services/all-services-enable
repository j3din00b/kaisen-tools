#!/bin/bash

set -e

RED='\e[1;31m'

if [[ "$EUID" -ne "0" ]]; then
        echo -e $RED "Run this script as root or with sudo command."
        exit 1
fi

systemctl enable 2ping
systemctl start 2ping
systemctl enable anydesk
systemctl start anydesk
systemctl enable arpalert
systemctl start arpalert
systemctl enable arpwatch
systemctl start arpwatch
systemctl enable avahi-daemon
systemctl start avahi-daemon
systemctl enable bacula-fd
systemctl start bacula-fd
systemctl enable bacula-sd
systemctl enable bettercap
systemctl start bettercap
systemctl enable bluetooth
systemctl start bluetooth
systemctl enable blueman-mechanism
systemctl start blueman-mechanism
systemctl enable ceph-fuse.target
systemctl start ceph-fuse.target
systemctl enable clamav-daemon
systemctl start clamav-daemon
systemctl enable clamav-freshclam
systemctl start clamav-freshclam
systemctl enable clamav-milter
systemctl start clamav-milter
systemctl enable cups-browsed
systemctl start cups-browsed
systemctl enable cups
systemctl start cups
systemctl enable cups.path
systemctl start cups.path
systemctl enable cups.socket
systemctl start cups.socket
systemctl enable docker
systemctl start docker
systemctl enable docker.socket
systemctl start docker.socket
systemctl enable e2scrub_reap
systemctl start e2scrub_reap
systemctl enable e2scrub_all.timer
systemctl start e2scrub_all.timer
systemctl enable etc-setserial
systemctl start etc-setserial
systemctl enable iptables
systemctl start iptables
systemctl enable ip6tables
systemctl start ip6tables
systemctl enable netfilter-persistent
systemctl start netfilter-persistent
systemctl enable gns3-server
systemctl start gns3-server
systemctl enable hddtemp
systemctl start hddtemp
systemctl unmask hostapd
systemctl enable hostapd
systemctl enable irqbalance
systemctl start irqbalance
systemctl enable libvirtd.service
systemctl start libvirtd.service
systemctl enable virtlockd.socket
systemctl start virtlockd.socket
systemctl enable virtlogd.socket
systemctl start virtlogd.socket
systemctl enable libvirtd.socket
systemctl start libvirtd.socket
systemctl enable libvirtd-ro.socket
systemctl start libvirtd-ro.socket
systemctl enable libvirt-guests.service
systemctl start libvirt-guests.service
systemctl enable libvirtd-admin.socket
systemctl start libvirtd-admin.socket
systemctl enable virtlockd-admin.socket
systemctl start virtlockd-admin.socket
systemctl enable virtlogd-admin.socket
systemctl start virtlogd-admin.socket
systemctl enable lm-sensors
systemctl start lm-sensors
systemctl enable lockdown
systemctl start lockdown
systemctl enable lxcfs
systemctl start lxcfs
systemctl enable lxc-net
systemctl start lxc-net
systemctl enable lxc
systemctl start lxc
systemctl enable neo4j
systemctl start neo4j
systemctl enable nfs-client.target
systemctl start nfs-client.target
systemctl enable nfs-kernel-server
systemctl start nfs-kernel-server
systemctl enable nfs-server
systemctl start nfs-server
systemctl enable portmap
systemctl start portmap
systemctl enable rpcbind
systemctl start rpcbind
systemctl enable rpcbind.socket
systemctl start rpcbind.socket
systemctl enable ntp
systemctl start ntp
systemctl enable o2cb
systemctl start o2cb
systemctl enable ocfs2
systemctl start ocfs2
systemctl enable openvpn
systemctl start openvpn
systemctl enable rpcbind
systemctl start rpcbind
systemctl enable rpcbind.socket
systemctl start rpcbind.socket
systemctl enable rsync
systemctl start rsync
systemctl enable setserial
systemctl start setserial
systemctl enable smartmontools
systemctl start smartmontools
systemctl enable ssh
systemctl start ssh
systemctl enable sysstat
systemctl start sysstat
systemctl enable teamviewerd
systemctl start teamviewerd
systemctl enable vboxweb
systemctl enable virtualbox
systemctl enable virtualbox-guest-utils
systemctl start virtualbox-guest-utils
systemctl enable open-vm-tools
systemctl start open-vm-tools
systemctl enable zfs-fuse
